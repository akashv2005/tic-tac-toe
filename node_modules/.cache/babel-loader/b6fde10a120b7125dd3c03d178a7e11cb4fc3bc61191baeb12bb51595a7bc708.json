{"ast":null,"code":"var _jsxFileName = \"/home/akash-verma/Desktop/tic-tac-toe/src/game.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './game.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tile({\n  content,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"tile\",\n    onClick: onClick,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Tile;\nfunction Grid({\n  isXTurn,\n  grid,\n  handleMove\n}) {\n  const winner = findWinner(grid);\n  const statusMessage = winner ? `Winner: ${winner}` : `Next player: ${isXTurn ? 'X' : 'O'}`;\n  function processClick(index) {\n    if (winner || grid[index]) return;\n    const updatedGrid = [...grid];\n    updatedGrid[index] = isXTurn ? 'X' : 'O';\n    handleMove(updatedGrid);\n  }\n  const renderTile = index => /*#__PURE__*/_jsxDEV(Tile, {\n    content: grid[index],\n    onClick: () => processClick(index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderTile(0), \" \", renderTile(1), \" \", renderTile(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderTile(3), \" \", renderTile(4), \" \", renderTile(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderTile(6), \" \", renderTile(7), \" \", renderTile(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Grid;\nexport default function TicTacToeGame() {\n  _s();\n  const [grid, setGrid] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n  function handlePlay(updatedGrid) {\n    setGrid(updatedGrid);\n    setIsXTurn(!isXTurn);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        isXTurn: isXTurn,\n        grid: grid,\n        handleMove: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToeGame, \"3/DpPMX1/RyWmSoUFQBpYAw+Kjg=\");\n_c3 = TicTacToeGame;\nfunction findWinner(grid) {\n  const winPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n  // Rows\n  [0, 3, 6], [1, 4, 7], [2, 5, 8],\n  // Columns\n  [0, 4, 8], [2, 4, 6] // Diagonals\n  ];\n  for (let [a, b, c] of winPatterns) {\n    if (grid[a] && grid[a] === grid[b] && grid[a] === grid[c]) {\n      return grid[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"TicTacToeGame\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Tile","content","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","isXTurn","grid","handleMove","winner","findWinner","statusMessage","processClick","index","updatedGrid","renderTile","_c2","TicTacToeGame","_s","setGrid","Array","fill","setIsXTurn","handlePlay","_c3","winPatterns","a","b","c","$RefreshReg$"],"sources":["/home/akash-verma/Desktop/tic-tac-toe/src/game.js"],"sourcesContent":["import { useState } from 'react';\nimport './game.css';\nfunction Tile({ content, onClick }) {\n  return (\n    <button className=\"tile\" onClick={onClick}>\n      {content}\n    </button>\n  );\n}\n\nfunction Grid({ isXTurn, grid, handleMove }) {\n  const winner = findWinner(grid);\n  const statusMessage = winner\n    ? `Winner: ${winner}`\n    : `Next player: ${isXTurn ? 'X' : 'O'}`;\n\n  function processClick(index) {\n    if (winner || grid[index]) return;\n\n    const updatedGrid = [...grid];\n    updatedGrid[index] = isXTurn ? 'X' : 'O';\n    handleMove(updatedGrid);\n  }\n\n  const renderTile = (index) => (\n    <Tile content={grid[index]} onClick={() => processClick(index)} />\n  );\n\n  return (\n    <>\n      <div className=\"status\">{statusMessage}</div>\n      <div className=\"grid-row\">\n        {renderTile(0)} {renderTile(1)} {renderTile(2)}\n      </div>\n      <div className=\"grid-row\">\n        {renderTile(3)} {renderTile(4)} {renderTile(5)}\n      </div>\n      <div className=\"grid-row\">\n        {renderTile(6)} {renderTile(7)} {renderTile(8)}\n      </div>\n    </>\n  );\n}\n\nexport default function TicTacToeGame() {\n  const [grid, setGrid] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n\n  function handlePlay(updatedGrid) {\n    setGrid(updatedGrid);\n    setIsXTurn(!isXTurn);\n  }\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"board\">\n        <Grid isXTurn={isXTurn} grid={grid} handleMove={handlePlay} />\n      </div>\n    </div>\n  );\n}\n\nfunction findWinner(grid) {\n  const winPatterns = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n    [0, 4, 8], [2, 4, 6] // Diagonals\n  ];\n\n  for (let [a, b, c] of winPatterns) {\n    if (grid[a] && grid[a] === grid[b] && grid[a] === grid[c]) {\n      return grid[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}